{"title": "DeepVulMatch: Learning and Matching Latent Vulnerability Representations for Dual-Granularity Vulnerability Detection", "first_label": ["Vulnerabilities"], "second_label": ["Detection"], "data": "M Fu, T Le, V Nguyen, C Tantithamthavorn, D Phung- IEEE Transactions on, 2025\nDeep learning (DL) models are widely used to detect software vulnerabilities, but \nidentifying vulnerabilities at the line level remains challenging due to varied coding \nstyles and the spread of vulnerabilities across multiple lines. We observe that", "link": "https://scholar.google.com/scholar_url?url=https://ieeexplore.ieee.org/abstract/document/11185217/&hl=vi&sa=X&d=1932042155778202107&ei=ZJziaLGAPZycieoPgK6aoQo&scisig=AAZF9b81gdxJwNXJbFWP6W8f-3aQ&oi=scholaralrt&hist=70gU4M0AAAAJ:5337116523931328826:AAZF9b-46FvMQTpOKclK0XMbpLrW&html=&pos=0&folt=rel", "author": ["Thanh Le-Cong"], "ref": ["Thanh Le-Cong - nghi\u00ean c\u1ee9u li\u00ean quan m\u1edbi"]}
{"title": "Generating High-Quality Datasets for Code Editing via Open-Source Language Models", "first_label": ["LLM", "Code"], "second_label": [], "data": "Z Zhang, M Liu, Z Chen, L Liang, Y Chen, G Ou- arXiv preprint arXiv, 2025\nCode editing plays a vital role in software engineering, requiring developers to adjust \nexisting code according to natural language instructions while keeping functionality \nintact and avoiding unnecessary modifications. However, commit-based datasets", "link": "https://scholar.google.com/scholar_url?url=https://arxiv.org/pdf/2509.25203&hl=vi&sa=X&d=16003307718581653243&ei=ZJziaLGAPZycieoPgK6aoQo&scisig=AAZF9b-WX82g5S_NgG548uiHBBUN&oi=scholaralrt&hist=70gU4M0AAAAJ:5337116523931328826:AAZF9b-46FvMQTpOKclK0XMbpLrW&html=&pos=1&folt=rel", "author": ["Thanh Le-Cong"], "ref": ["Thanh Le-Cong - nghi\u00ean c\u1ee9u li\u00ean quan m\u1edbi"]}
{"title": "MAVUL: Multi-Agent Vulnerability Detection via Contextual Reasoning and Interactive Refinement", "first_label": ["Vulnerabilities"], "second_label": ["Detection", "Agent", "Reasoning"], "data": "Y Li, K Joshi, X Wang, E Wong- arXiv preprint arXiv:2510.00317, 2025\nThe widespread adoption of open-source software (OSS) necessitates the mitigation \nof vulnerability risks. Most vulnerability detection (VD) methods are limited by \ninadequate contextual understanding, restrictive single-round interactions, and", "link": "https://scholar.google.com/scholar_url?url=https://arxiv.org/pdf/2510.00317&hl=vi&sa=X&d=577185325914480253&ei=ZJziaLGAPZycieoPgK6aoQo&scisig=AAZF9b9zhj17R2ND7E9Z8TAf0EMX&oi=scholaralrt&hist=70gU4M0AAAAJ:5337116523931328826:AAZF9b-46FvMQTpOKclK0XMbpLrW&html=&pos=2&folt=rel", "author": ["Thanh Le-Cong"], "ref": ["Thanh Le-Cong - nghi\u00ean c\u1ee9u li\u00ean quan m\u1edbi"]}
{"title": "PVDetector: Pretrained Vulnerability Detection on Vulnerability-enriched Code Semantic Graph", "first_label": ["Vulnerabilities", "Code"], "second_label": ["Detection", "Graph"], "data": "J Li, L Cui, J Zhang, L Li, R Xi, H Zhu- ACM Transactions on Software Engineering, 2025\nAutomated vulnerability detection is a critical issue in software security. The advent of \ndeep learning (DL) has led to numerous studies employing DL to detect \nvulnerabilities in software source code. However, existing approaches still perform", "link": "https://scholar.google.com/scholar_url?url=https://dl.acm.org/doi/pdf/10.1145/3768582&hl=vi&sa=X&d=8582469852291084545&ei=ZJziaLGAPZycieoPgK6aoQo&scisig=AAZF9b-KDpNTmZzjJ738P4MlJP3u&oi=scholaralrt&hist=70gU4M0AAAAJ:5337116523931328826:AAZF9b-46FvMQTpOKclK0XMbpLrW&html=&pos=3&folt=rel", "author": ["Thanh Le-Cong"], "ref": ["Thanh Le-Cong - nghi\u00ean c\u1ee9u li\u00ean quan m\u1edbi"]}
{"title": "Semantics-Aligned, Curriculum-Driven, and Reasoning-Enhanced Vulnerability Repair Framework", "first_label": ["Vulnerabilities"], "second_label": ["Repair", "Reasoning"], "data": "C Yang, T Zhang, J Jiang, X Zhou, H Tian, J Shi- arXiv preprint arXiv, 2025\nCurrent learning-based Automated Vulnerability Repair (AVR) approaches, while \npromising, often fail to generalize effectively in real-world scenarios. Our diagnostic \nanalysis reveals three fundamental weaknesses in state-of-the-art AVR", "link": "https://scholar.google.com/scholar_url?url=https://arxiv.org/pdf/2510.01002&hl=vi&sa=X&d=3295364238331710726&ei=ZJziaLGAPZycieoPgK6aoQo&scisig=AAZF9b94Nys9DExicLdG1vTDFGyb&oi=scholaralrt&hist=70gU4M0AAAAJ:5337116523931328826:AAZF9b-46FvMQTpOKclK0XMbpLrW&html=&pos=4&folt=rel", "author": ["Thanh Le-Cong"], "ref": ["Thanh Le-Cong - nghi\u00ean c\u1ee9u li\u00ean quan m\u1edbi"]}
{"title": "From Cryptic to Clear-Training on LLM Explanations to Detect Smart Contract Vulnerabilities", "first_label": ["Vulnerabilities", "Smart Contracts", "LLM"], "second_label": [], "data": "Y Chen, Z Sun, G Wang, Q Liang, X Yu, D Hao- ACM Transactions on Software, 2025\nSmart contracts have revolutionized the way transactions are executed, offering \ndecentralized and immutable frameworks. The immutability of smart contracts poses \nsignificant risks when vulnerabilities exist in their code, leading to financial losses", "link": "https://scholar.google.com/scholar_url?url=https://dl.acm.org/doi/pdf/10.1145/3765753&hl=vi&sa=X&d=10696251976758637118&ei=ZJziaLGAPZycieoPgK6aoQo&scisig=AAZF9b9ZBf4NQYTpgMU9yATSPdqf&oi=scholaralrt&hist=70gU4M0AAAAJ:5337116523931328826:AAZF9b-46FvMQTpOKclK0XMbpLrW&html=&pos=5&folt=rel", "author": ["Thanh Le-Cong"], "ref": ["Thanh Le-Cong - nghi\u00ean c\u1ee9u li\u00ean quan m\u1edbi"]}
{"title": "MC-LRNN: A logic-based neural network for multi-class software vulnerability prediction", "first_label": ["Vulnerabilities"], "second_label": [], "data": "Y Shang, S Liu- Journal of Systems and Software, 2025\nSoftware vulnerabilities are a major threat to information systems. Detecting them \nearly and accurately is critical. Software metrics are commonly used in vulnerability \nprediction, but choosing the most relevant features remains a major challenge. In this", "link": "https://scholar.google.com/scholar_url?url=https://www.sciencedirect.com/science/article/pii/S0164121225002961&hl=vi&sa=X&d=8570138772226985730&ei=ZJziaLGAPZycieoPgK6aoQo&scisig=AAZF9b84q-crm5S0aBJ7OE9mFpMl&oi=scholaralrt&hist=70gU4M0AAAAJ:5337116523931328826:AAZF9b-46FvMQTpOKclK0XMbpLrW&html=&pos=6&folt=rel", "author": ["Thanh Le-Cong"], "ref": ["Thanh Le-Cong - nghi\u00ean c\u1ee9u li\u00ean quan m\u1edbi"]}
{"title": "Beyond Syntax: Testing LLM Semantic Understanding of Code", "first_label": ["LLM", "Code", "Software Testing"], "second_label": [], "data": "A Saban, TF Bissyand- Africa Data, Artificial Intelligence and Innovations: First\nWhile Large Language Models (LLMs) have shown promise in various software \nengineering tasks, their deep understanding of code semantics remains a \nchallenging area. This paper introduces a novel methodology to probe the semantic", "link": "https://scholar.google.com/scholar_url?url=https://books.google.com/books%3Fhl%3Dvi%26lr%3D%26id%3DCR2LEQAAQBAJ%26oi%3Dfnd%26pg%3DPA3%26ots%3D3_oFAVBxAc%26sig%3DBXnU10Tin3hkXjOmrbYGW4VhKmY&hl=vi&sa=X&d=9474776293014934540&ei=ZJziaLGAPZycieoPgK6aoQo&scisig=AAZF9b8XCa8jjtammgfsCL1fbJfG&oi=scholaralrt&hist=70gU4M0AAAAJ:5337116523931328826:AAZF9b-46FvMQTpOKclK0XMbpLrW&html=&pos=7&folt=rel", "author": ["Thanh Le-Cong"], "ref": ["Thanh Le-Cong - nghi\u00ean c\u1ee9u li\u00ean quan m\u1edbi"]}
{"title": "VulAgent: Hypothesis-Validation based Multi-Agent Vulnerability Detection", "first_label": ["Vulnerabilities"], "second_label": ["Detection", "Agent"], "data": "Z Wang, G Li, J Li, H Zhu, Z Jin- arXiv preprint arXiv:2509.11523, 2025\nThe application of language models to project-level vulnerability detection remains \nchallenging, owing to the dual requirement of accurately localizing security-sensitive \ncode and correctly correlating and reasoning over complex program context. We", "link": "https://scholar.google.com/scholar_url?url=https://arxiv.org/pdf/2509.11523&hl=vi&sa=X&d=15896523810638326847&ei=ZJziaLGAPZycieoPgK6aoQo&scisig=AAZF9b8oEc6vOjmXYpw9QnTPeH90&oi=scholaralrt&hist=70gU4M0AAAAJ:5337116523931328826:AAZF9b-46FvMQTpOKclK0XMbpLrW&html=&pos=8&folt=rel", "author": ["Thanh Le-Cong"], "ref": ["Thanh Le-Cong - nghi\u00ean c\u1ee9u li\u00ean quan m\u1edbi"]}
{"title": "On the Use of Imbalanced Datasets for Learning-Based Vulnerability Detection", "first_label": ["Vulnerabilities"], "second_label": ["Detection"], "data": "RZL Foulefack, A Marchetto- IFIP International Conference on Testing Software and, 2025\nStatic code analysis conducted by means of learning-based methods is an essential \npart of Security Testing. Effective learning algorithms are crucial for training reliable \nmodels that can accurately detect weaknesses and vulnerabilities. During models'\n\u00a0\nGoogle Scholar gi thng bo ny cho bn v bn ang theo di nhng bi vit mi lin quan n nghin cu ca \nThanh Le-Cong\n.\nLit k cnh bo\nHy thng bo", "link": "https://scholar.google.com/scholar_url?url=https://link.springer.com/chapter/10.1007/978-3-032-05188-2_20&hl=vi&sa=X&d=7711185064955775681&ei=ZJziaLGAPZycieoPgK6aoQo&scisig=AAZF9b89r6zwK8DmhfjAM2OZUwge&oi=scholaralrt&hist=70gU4M0AAAAJ:5337116523931328826:AAZF9b-46FvMQTpOKclK0XMbpLrW&html=&pos=9&folt=rel", "author": ["Thanh Le-Cong"], "ref": ["Thanh Le-Cong - nghi\u00ean c\u1ee9u li\u00ean quan m\u1edbi"]}
{"title": "Red Teaming Program Repair Agents: When Correct Patches can Hide Vulnerabilities", "first_label": ["Vulnerabilities", "APR"], "second_label": ["Repair", "Agent"], "data": "S Chen, Y He, S Jana, B Ray- arXiv preprint arXiv:2509.25894, 2025\nLLM-based agents are increasingly deployed for software maintenance tasks such \nas automated program repair (APR). APR agents automatically fetch GitHub issues \nand use backend LLMs to generate patches that fix the reported bugs. However", "link": "https://scholar.google.com/scholar_url?url=https://arxiv.org/pdf/2509.25894&hl=vi&sa=X&d=17829160501867046335&ei=5QnhaIOsHMyR6rQP8M_xgAM&scisig=AAZF9b9xoBNSp2DVGtyfC25OhwWn&oi=scholaralrt&hist=70gU4M0AAAAJ:5337116523931328826:AAZF9b-46FvMQTpOKclK0XMbpLrW&html=&pos=0&folt=rel", "author": ["Thanh Le-Cong"], "ref": ["Thanh Le-Cong - nghi\u00ean c\u1ee9u li\u00ean quan m\u1edbi"]}
{"title": "Explainable Fault Localization for Programming Assignments via LLM-Guided Annotation", "first_label": ["LLM", "Fault Localization"], "second_label": ["Localization"], "data": "F Liu, T Wang, L Zhang, Z Yang, J Jiang, Z Sun- arXiv preprint arXiv:2509.25676, 2025\nProviding timely and personalized guidance for students' programming assignments, \noffers significant practical value for helping students complete assignments and \nenhance their learning. In recent years, various automated Fault Localization (FL)", "link": "https://scholar.google.com/scholar_url?url=https://arxiv.org/pdf/2509.25676&hl=vi&sa=X&d=16831300563596066577&ei=5QnhaIOsHMyR6rQP8M_xgAM&scisig=AAZF9b8KiRs4870r1KbKTYTF0UyR&oi=scholaralrt&hist=70gU4M0AAAAJ:5337116523931328826:AAZF9b-46FvMQTpOKclK0XMbpLrW&html=&pos=1&folt=rel", "author": ["Thanh Le-Cong"], "ref": ["Thanh Le-Cong - nghi\u00ean c\u1ee9u li\u00ean quan m\u1edbi"]}
{"title": "A Scalable Vulnerability Detection System with Multi-View Graph Representations", "first_label": ["Vulnerabilities"], "second_label": ["Detection", "Graph"], "data": "S Dou, H Zheng, J Shan, Y Wu, D Zou, X Huang, Y Liu- ACM Transactions on, 2025\nDeep learning (DL) has been extensively utilized in source code vulnerability \ndetection due to its robust automatic feature extraction capabilities. To achieve \nscalable vulnerability scanning, some prior studies intend to process the source code", "link": "https://scholar.google.com/scholar_url?url=https://dl.acm.org/doi/pdf/10.1145/3770075&hl=vi&sa=X&d=14953216934661661615&ei=5QnhaIOsHMyR6rQP8M_xgAM&scisig=AAZF9b-mdJedTULsxLZv6yXH09xW&oi=scholaralrt&hist=70gU4M0AAAAJ:5337116523931328826:AAZF9b-46FvMQTpOKclK0XMbpLrW&html=&pos=2&folt=rel", "author": ["Thanh Le-Cong"], "ref": ["Thanh Le-Cong - nghi\u00ean c\u1ee9u li\u00ean quan m\u1edbi"]}
{"title": "Cross-Domain Evaluation of Transformer-Based Vulnerability Detection on Open & Industry Data", "first_label": ["Vulnerabilities"], "second_label": ["Detection"], "data": "M Mock, T Forrer, B Russo- arXiv preprint arXiv:2509.09313, 2025\nDeep learning solutions for vulnerability detection proposed in academic research \nare not always accessible to developers, and their applicability in industrial settings \nis rarely addressed. Transferring such technologies from academia to industry", "link": "https://scholar.google.com/scholar_url?url=https://arxiv.org/pdf/2509.09313&hl=vi&sa=X&d=3896104068122220271&ei=5QnhaIOsHMyR6rQP8M_xgAM&scisig=AAZF9b-3QAzHZH6Dtl2JLErNC_cZ&oi=scholaralrt&hist=70gU4M0AAAAJ:5337116523931328826:AAZF9b-46FvMQTpOKclK0XMbpLrW&html=&pos=3&folt=rel", "author": ["Thanh Le-Cong"], "ref": ["Thanh Le-Cong - nghi\u00ean c\u1ee9u li\u00ean quan m\u1edbi"]}
{"title": "SLD-Spec: Enhancement LLM-assisted Specification Generation for Complex Loop Functions via Program Slicing and Logical Deletion", "first_label": ["LLM"], "second_label": ["Generation"], "data": "Z Chen, L Zhang, Z Zhang, JJ Zhang, R Zhou, Y Shen- arXiv preprint arXiv, 2025\nAutomatically generating formal specifications from program code can greatly \nenhance the efficiency of program verification and enable end-to-end automation \nfrom requirements to reliable software. However, existing LLM-based approaches", "link": "https://scholar.google.com/scholar_url?url=https://arxiv.org/pdf/2509.09917&hl=vi&sa=X&d=2122673112308488324&ei=5QnhaIOsHMyR6rQP8M_xgAM&scisig=AAZF9b-CuDfsPWCmN1n_oNohxVgn&oi=scholaralrt&hist=70gU4M0AAAAJ:5337116523931328826:AAZF9b-46FvMQTpOKclK0XMbpLrW&html=&pos=4&folt=rel", "author": ["Thanh Le-Cong"], "ref": ["Thanh Le-Cong - nghi\u00ean c\u1ee9u li\u00ean quan m\u1edbi"]}
{"title": "Local Agentic RAG-Based Information System Development for Intelligent Analysis of GitHub Code Repositories in Computer Science Education", "first_label": ["Code"], "second_label": ["Agent"], "data": "Z Hu, MM Paprotskyi, V Vysotska, L Chyrun, Y Ushenko\nThis study presents the development and evaluation of a local agent-based Retrieval-\nAugmented Generation (Agentic RAG) system designed for the intelligent analysis of \nGitHub repositories in computer science education and IT practice. The novelty of\n\u00a0\nGoogle Scholar gi thng bo ny cho bn v bn ang theo di nhng bi vit mi lin quan n nghin cu ca \nThanh Le-Cong\n.\nLit k cnh bo\nHy thng bo", "link": "https://scholar.google.com/scholar_url?url=https://www.mecs-press.org/ijmecs/ijmecs-v17-n5/IJMECS-V17-N5-7.pdf&hl=vi&sa=X&d=15899062735032558573&ei=5QnhaIOsHMyR6rQP8M_xgAM&scisig=AAZF9b9zpITZz-kJHGT1UMgEWtn4&oi=scholaralrt&hist=70gU4M0AAAAJ:5337116523931328826:AAZF9b-46FvMQTpOKclK0XMbpLrW&html=&pos=5&folt=rel", "author": ["Thanh Le-Cong"], "ref": ["Thanh Le-Cong - nghi\u00ean c\u1ee9u li\u00ean quan m\u1edbi"]}
{"title": "BloomAPR: A Bloom's Taxonomy-based Framework for Assessing the Capabilities of LLM-Powered APR Solutions", "first_label": ["LLM"], "second_label": [], "data": "Y Ma, J Shin, L Da Silva, Z Ming, S Wang, F Khomh- arXiv preprint arXiv, 2025\nRecent advances in large language models (LLMs) have accelerated the \ndevelopment of AI-driven automated program repair (APR) solutions. However, these \nsolutions are typically evaluated using static benchmarks such as Defects4J and \nSWE-bench, which suffer from two key limitations:(1) the risk of data contamination, \npotentially inflating evaluation results due to overlap with LLM training data, and (2) \nlimited ability to assess the APR capabilities in dynamic and diverse contexts. In this\nTrch dn: Invalidator: Automated patch correctness assessment via semantic", "link": "https://scholar.google.com/scholar_url?url=https://arxiv.org/pdf/2509.25465&hl=vi&sa=X&d=11066311399156471814&ei=5QnhaPeuJtvTieoP4fTokAI&scisig=AAZF9b8-WlUSvsvzUFkBWMfotWY9&oi=scholaralrt&hist=70gU4M0AAAAJ:6246953642887790424:AAZF9b-KfaIzNELg_AxYHyYLV6lH&html=&pos=0&folt=cit", "author": ["Thanh Le-Cong"], "ref": ["4 l\u1eddi tr\u00edch d\u1eabn m\u1edbi \u0111\u1ebfn b\u00e0i vi\u1ebft c\u1ee7a Thanh Le-Cong"]}
{"title": "A Benchmark for Localizing Code and Non-Code Issues in Software Projects", "first_label": ["Code"], "second_label": [], "data": "Z Zhang, J Wang, Q Yang, Y Pan, Y Tang, Y Li, Z Xing- arXiv preprint arXiv, 2025\nAccurate project localization (eg, files and functions) for issue resolution is a critical \nfirst step in software maintenance. However, existing benchmarks for issue \nlocalization, such as SWE-Bench and LocBench, are limited. They focus \npredominantly on pull-request issues and code locations, ignoring other evidence \nand non-code files such as commits, comments, configurations, and documentation. \nTo address this gap, we introduce MULocBench, a comprehensive dataset of 1,100\nTrch dn: Thanh Le-Cong, Ratnadira Widyasari, Chakkrit Tantithamthavorn", "link": "https://scholar.google.com/scholar_url?url=https://arxiv.org/pdf/2509.25242&hl=vi&sa=X&d=9912554073922702978&ei=5QnhaPeuJtvTieoP4fTokAI&scisig=AAZF9b8mdC7vfC9M85hnC5hsZ66A&oi=scholaralrt&hist=70gU4M0AAAAJ:6246953642887790424:AAZF9b-KfaIzNELg_AxYHyYLV6lH&html=&pos=1&folt=cit", "author": ["Thanh Le-Cong"], "ref": ["4 l\u1eddi tr\u00edch d\u1eabn m\u1edbi \u0111\u1ebfn b\u00e0i vi\u1ebft c\u1ee7a Thanh Le-Cong"]}
{"title": "Comparison of Language Models for Source Code Vulnerability Classification", "first_label": ["Vulnerabilities", "LLM", "Code"], "second_label": [], "data": "KI Gladkikh, AA Zakharov- 2025 International Russian Automation Conference, 2025\nModern large language models (LLMs) have demonstrated strong performance in \nthe static analysis of source code for security vulnerabilities. With new LLMs \nemerging daily, they differ in architecture, prompting strategies, and their overall \ncapacity to understand source code. In this study, we developed a benchmarking \nframework to evaluate a range of LLMs on vulnerability detection tasks using multiple \nperformance metrics. The results indicate that models from the Qwen family achieve\nTrch dn: Comparison of static application security testing tools and large", "link": "https://scholar.google.com/scholar_url?url=https://ieeexplore.ieee.org/abstract/document/11177346/&hl=vi&sa=X&d=5404891364929924575&ei=5QnhaPeuJtvTieoP4fTokAI&scisig=AAZF9b8a5z_BUYvzSELnbAZ27iIJ&oi=scholaralrt&hist=70gU4M0AAAAJ:6246953642887790424:AAZF9b-KfaIzNELg_AxYHyYLV6lH&html=&pos=2&folt=cit", "author": ["Thanh Le-Cong"], "ref": ["4 l\u1eddi tr\u00edch d\u1eabn m\u1edbi \u0111\u1ebfn b\u00e0i vi\u1ebft c\u1ee7a Thanh Le-Cong"]}
{"title": "From Vibe to Vise Coding: Addressing the AI-Generated Code Quality Crisis", "first_label": ["Code"], "second_label": [], "data": "D Farag- Softwaretechnik-Trends Band 45, Heft 3, 2025\nCurrent news claims that AI is replacing software developers [20, 31, 32]. However, \nsuch proclamations may primarily serve corporate narratives (like justifying layoffs or \npromoting AI products) rather than reflect reality. We examine data on AI adoption \nand its effects, revealing that AI-assisted software development (AI coding for short) \nimproves, but software engineering is far from full automation: The current hype often \nfails to distinguish between what large language models (LLMs) can and cannot do\nTrch dn: Refining chatgpt-generated code: Characterizing and mitigating\u00a0\u00a0\n\u00a0\nGoogle Scholar gi thng bo ny cho bn v bn ang theo di nhng li trch dn mi trong cc bi vit ca \nThanh Le-Cong\n.\nLit k cnh bo\nHy thng bo", "link": "https://scholar.google.com/scholar_url?url=https://dl.gi.de/server/api/core/bitstreams/f8fe787e-2367-4e40-a79c-ee2f183193de/content&hl=vi&sa=X&d=17953142790972084078&ei=5QnhaPeuJtvTieoP4fTokAI&scisig=AAZF9b9zBjfXX4ndNh-g005IpefL&oi=scholaralrt&hist=70gU4M0AAAAJ:6246953642887790424:AAZF9b-KfaIzNELg_AxYHyYLV6lH&html=&pos=3&folt=cit", "author": ["Thanh Le-Cong"], "ref": ["4 l\u1eddi tr\u00edch d\u1eabn m\u1edbi \u0111\u1ebfn b\u00e0i vi\u1ebft c\u1ee7a Thanh Le-Cong"]}
