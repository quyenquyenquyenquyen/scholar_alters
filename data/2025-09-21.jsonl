{"title": "Ensembling Large Language Models for Code Vulnerability Detection: An Empirical Evaluation", "first_label": ["Vulnerabilities", "LLM", "Code"], "second_label": ["Detection"], "data": "Z Sun, J Li, Y Wan, C Li, H Zhang, G Li, H Liu, C Lyu- arXiv preprint arXiv, 2025\nCode vulnerability detection is crucial for ensuring the security and reliability of \nmodern software systems. Recently, Large Language Models (LLMs) have shown \npromising capabilities in this domain. However, notable discrepancies in detection \nresults often arise when analyzing identical code segments across different training \nstages of the same model or among architecturally distinct LLMs. While such \ninconsistencies may compromise detection stability, they also highlight a key\nTrch dn: Thanh Le-Cong, Ting Zhang, Ivana Clairine Irsan, Joshua", "link": "https://scholar.google.com/scholar_url?url=https://arxiv.org/pdf/2509.12629&hl=vi&sa=X&d=7766017862971187493&ei=Gg7PaIP3Mp3XieoPyouG-QE&scisig=AAZF9b_VL3okFZ5oJasZ2sq3ko2T&oi=scholaralrt&hist=70gU4M0AAAAJ:6246953642887790424:AAZF9b-KfaIzNELg_AxYHyYLV6lH&html=&pos=0&folt=cit", "author": ["Thanh Le-Cong"], "ref": ["2 l\u1eddi tr\u00edch d\u1eabn m\u1edbi \u0111\u1ebfn b\u00e0i vi\u1ebft c\u1ee7a Thanh Le-Cong", "Thanh Le-Cong - nghi\u00ean c\u1ee9u li\u00ean quan m\u1edbi"]}
{"title": "Assessing Frontier LLMs in Solving Game Development Problems: Preliminary Findings Across Three Game Engines", "first_label": ["LLM"], "second_label": [], "data": "TGC de Vasconcelos, AA de Castro Filho, GPS Ribeiro- sobre Engenharia de, 2025\nThis paper evaluates three frontier LLMs (ChatGPT-4o, o3, and Gemini 2.5 Pro) \nagainst expert-rated human answers for 30 technical questions collected from online \nQ&A forums about three popular game engines: Unreal, Unity, and Godot. Our \nresults reveal significant performance variance, with o3 demonstrating superior \ncapabilities over Gemini 2.5 Pro and ChatGPT-4o. A primary weakness identified \nacross all models was response completeness, where AI-generated answers often\nTrch dn: Are we ready to embrace generative ai for software q&a?\u00a0\u00a0\n\u00a0\nGoogle Scholar gi thng bo ny cho bn v bn ang theo di nhng li trch dn mi trong cc bi vit ca \nThanh Le-Cong\n.\nLit k cnh bo\nHy thng bo", "link": "https://scholar.google.com/scholar_url?url=https://sol.sbc.org.br/index.php/se4games/article/download/36938/36723/&hl=vi&sa=X&d=3780811592970106905&ei=Gg7PaIP3Mp3XieoPyouG-QE&scisig=AAZF9b-kIvcoB6-CNFjm_gv6Dhdw&oi=scholaralrt&hist=70gU4M0AAAAJ:6246953642887790424:AAZF9b-KfaIzNELg_AxYHyYLV6lH&html=&pos=1&folt=cit", "author": ["Thanh Le-Cong"], "ref": ["2 l\u1eddi tr\u00edch d\u1eabn m\u1edbi \u0111\u1ebfn b\u00e0i vi\u1ebft c\u1ee7a Thanh Le-Cong"]}
{"title": "CodeCureAgent: Automatic Classification and Repair of Static Analysis Warnings", "first_label": ["Code", "Static Analysis"], "second_label": ["Repair", "Agent"], "data": "P Joos, I Bouzenia, M Pradel- arXiv preprint arXiv:2509.11787, 2025\nStatic analysis tools are widely used to detect bugs, vulnerabilities, and code smells. \nTraditionally, developers must resolve these warnings manually. Because this \nprocess is tedious, developers sometimes ignore warnings, leading to an", "link": "https://scholar.google.com/scholar_url?url=https://arxiv.org/pdf/2509.11787&hl=vi&sa=X&d=9197991299532140408&ei=Gg7PaIzlJY_R6rQPqIXiwQE&scisig=AAZF9b_6tYRLLP0xRJNzvPGK_zla&oi=scholaralrt&hist=70gU4M0AAAAJ:5337116523931328826:AAZF9b-46FvMQTpOKclK0XMbpLrW&html=&pos=0&folt=rel", "author": ["Thanh Le-Cong"], "ref": ["Thanh Le-Cong - nghi\u00ean c\u1ee9u li\u00ean quan m\u1edbi"]}
{"title": "VulAgent: Hypothesis-Validation based Multi-Agent Vulnerability Detection", "first_label": ["Vulnerabilities"], "second_label": ["Detection", "Agent"], "data": "Z Wang, G Li, J Li, H Zhu, Z Jin- arXiv preprint arXiv:2509.11523, 2025\nThe application of language models to project-level vulnerability detection remains \nchallenging, owing to the dual requirement of accurately localizing security-sensitive \ncode and correctly correlating and reasoning over complex program context. We", "link": "https://scholar.google.com/scholar_url?url=https://arxiv.org/pdf/2509.11523&hl=vi&sa=X&d=15896523810638326847&ei=Gg7PaIzlJY_R6rQPqIXiwQE&scisig=AAZF9b8oEc6vOjmXYpw9QnTPeH90&oi=scholaralrt&hist=70gU4M0AAAAJ:5337116523931328826:AAZF9b-46FvMQTpOKclK0XMbpLrW&html=&pos=1&folt=rel", "author": ["Thanh Le-Cong"], "ref": ["Thanh Le-Cong - nghi\u00ean c\u1ee9u li\u00ean quan m\u1edbi"]}
{"title": "Understanding Prompt Management in GitHub Repositories: A Call for Best Practices", "first_label": [], "second_label": [], "data": "H Li, H Masri, FR Cogo, AA Bangash, B Adams- arXiv preprint arXiv, 2025\nThe rapid adoption of foundation models (eg, large language models) has given rise \nto promptware, ie, software built using natural language prompts. Effective \nmanagement of prompts, such as organization and quality assurance, is essential yet", "link": "https://scholar.google.com/scholar_url?url=https://arxiv.org/pdf/2509.12421&hl=vi&sa=X&d=2278902472950276779&ei=Gg7PaIzlJY_R6rQPqIXiwQE&scisig=AAZF9b-2hOX_vlkXLZhkazuOoGD7&oi=scholaralrt&hist=70gU4M0AAAAJ:5337116523931328826:AAZF9b-46FvMQTpOKclK0XMbpLrW&html=&pos=3&folt=rel", "author": ["Thanh Le-Cong"], "ref": ["Thanh Le-Cong - nghi\u00ean c\u1ee9u li\u00ean quan m\u1edbi"]}
{"title": "for Learning-Based Vulnerability Detection", "first_label": ["Vulnerabilities"], "second_label": ["Detection"], "data": "RZL Foulefack, A Marchetto- Testing Software and Systems: 37th IFIP WG 6.1\nStatic code analysis conducted by means of learning-based methods is an essential \npart of Security Testing. Effective learning algo-rithms are crucial for training reliable \nmodels that can accurately detect weaknesses and vulnerabilities. During models'\n\u00a0\nGoogle Scholar gi thng bo ny cho bn v bn ang theo di nhng bi vit mi lin quan n nghin cu ca \nThanh Le-Cong\n.\nLit k cnh bo\nHy thng bo", "link": "https://scholar.google.com/scholar_url?url=https://books.google.com/books%3Fhl%3Dvi%26lr%3D%26id%3DHQuHEQAAQBAJ%26oi%3Dfnd%26pg%3DPA307%26ots%3DdVOAatVqsr%26sig%3DmngnNfG1ssevzzkq8xQdnDvBiXU&hl=vi&sa=X&d=879843498815082224&ei=Gg7PaIzlJY_R6rQPqIXiwQE&scisig=AAZF9b-hUesjkD4Et8Ejes9jI5WU&oi=scholaralrt&hist=70gU4M0AAAAJ:5337116523931328826:AAZF9b-46FvMQTpOKclK0XMbpLrW&html=&pos=4&folt=rel", "author": ["Thanh Le-Cong"], "ref": ["Thanh Le-Cong - nghi\u00ean c\u1ee9u li\u00ean quan m\u1edbi"]}
{"title": "SLD-Spec: Enhancement LLM-assisted Specification Generation for Complex Loop Functions via Program Slicing and Logical Deletion", "first_label": ["LLM"], "second_label": ["Generation"], "data": "Z Chen, L Zhang, Z Zhang, JJ Zhang, R Zhou, Y Shen- arXiv preprint arXiv, 2025\nAutomatically generating formal specifications from program code can greatly \nenhance the efficiency of program verification and enable end-to-end automation \nfrom requirements to reliable software. However, existing LLM-based approaches", "link": "https://scholar.google.com/scholar_url?url=https://arxiv.org/pdf/2509.09917&hl=vi&sa=X&d=2122673112308488324&ei=0nHNaM6QBJu1ieoP1tDwoQs&scisig=AAZF9b-CuDfsPWCmN1n_oNohxVgn&oi=scholaralrt&hist=70gU4M0AAAAJ:5337116523931328826:AAZF9b-46FvMQTpOKclK0XMbpLrW&html=&pos=0&folt=rel", "author": ["Thanh Le-Cong"], "ref": ["Thanh Le-Cong - nghi\u00ean c\u1ee9u li\u00ean quan m\u1edbi", "2 l\u1eddi tr\u00edch d\u1eabn m\u1edbi \u0111\u1ebfn b\u00e0i vi\u1ebft c\u1ee7a Thanh Le-Cong"]}
{"title": "ExDoS: Expert-Guided Dual-Focus Cross-Modal Distillation for Smart Contract Vulnerability Detection", "first_label": ["Vulnerabilities", "Smart Contracts"], "second_label": ["Detection"], "data": "Y Jia, Y Tian, Y Wang, J Sun, H Xu- arXiv preprint arXiv:2509.10252, 2025\nThe success of smart contracts has made them a target for attacks, but their closed-\nsource nature often forces vulnerability detection to work on bytecode, which is \ninherently more challenging than source-code-based analysis. While recent studies\n\u00a0\nGoogle Scholar gi thng bo ny cho bn v bn ang theo di nhng bi vit mi lin quan n nghin cu ca \nThanh Le-Cong\n.\nLit k cnh bo\nHy thng bo", "link": "https://scholar.google.com/scholar_url?url=https://arxiv.org/pdf/2509.10252&hl=vi&sa=X&d=8136317411742995021&ei=0nHNaM6QBJu1ieoP1tDwoQs&scisig=AAZF9b-H1kj3p4b3knTEUU2oHPBi&oi=scholaralrt&hist=70gU4M0AAAAJ:5337116523931328826:AAZF9b-46FvMQTpOKclK0XMbpLrW&html=&pos=1&folt=rel", "author": ["Thanh Le-Cong"], "ref": ["Thanh Le-Cong - nghi\u00ean c\u1ee9u li\u00ean quan m\u1edbi"]}
{"title": "Developer-LLM Conversations: An Empirical Study of Interactions and Generated Code Quality", "first_label": ["LLM", "Code"], "second_label": [], "data": "S Zhong, Y Zou, B Adams- arXiv preprint arXiv:2509.10402, 2025\nLarge Language Models (LLMs) are becoming integral to modern software \ndevelopment workflows, assisting developers with code generation, API explanation, \nand iterative problem-solving through natural language conversations. Despite \nwidespread adoption, there is limited understanding of how developers interact with \nLLMs in practice and how these conversational dynamics influence task outcomes, \ncode quality, and software engineering workflows. To address this, we leverage\nTrch dn: Refining chatgpt-generated code: Characterizing and mitigating\u00a0\u00a0\n\u00a0\nGoogle Scholar gi thng bo ny cho bn v bn ang theo di nhng li trch dn mi trong cc bi vit ca \nThanh Le-Cong\n.\nLit k cnh bo\nHy thng bo", "link": "https://scholar.google.com/scholar_url?url=https://arxiv.org/pdf/2509.10402&hl=vi&sa=X&d=10737433787372387886&ei=0nHNaKXfDr_N6rQP6o3_4AQ&scisig=AAZF9b_2ppdhCQedelx9IekWjFV3&oi=scholaralrt&hist=70gU4M0AAAAJ:6246953642887790424:AAZF9b-KfaIzNELg_AxYHyYLV6lH&html=&pos=1&folt=cit", "author": ["Thanh Le-Cong"], "ref": ["2 l\u1eddi tr\u00edch d\u1eabn m\u1edbi \u0111\u1ebfn b\u00e0i vi\u1ebft c\u1ee7a Thanh Le-Cong"]}
