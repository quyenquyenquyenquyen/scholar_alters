{"title": "Assessing the Latent Automated Program Repair Capabilities of Large Language Models using Round-Trip Translation", "first_label": ["APR", "LLM"], "second_label": ["Repair", "Generation"], "data": "F Vallecillos Ruiz, A Grishina, M Hort, L Moonen- ACM Transactions on Software, 2025\nResearch shows that errors in natural language can be corrected by translating texts \nto another language and back using language models. We explore to what extent \nthis latent correction capability extends to Automated Program Repair (APR) by", "link": "https://scholar.google.com/scholar_url?url=https://dl.acm.org/doi/pdf/10.1145/3771922&hl=vi&sa=X&d=7692600566103524135&ei=ZZj2aIv3NYOAieoPtpDVoA0&scisig=AAZF9b94X1t1g5M_Ji0DwLkthHnK&oi=scholaralrt&hist=70gU4M0AAAAJ:5337116523931328826:AAZF9b-46FvMQTpOKclK0XMbpLrW&html=&pos=0&folt=rel", "author": ["Thanh Le-Cong"], "ref": ["Thanh Le-Cong - nghi\u00ean c\u1ee9u li\u00ean quan m\u1edbi"]}
{"title": "Generating High-Quality Datasets for Code Editing via Open-Source Language Models", "first_label": ["LLM", "Code"], "second_label": [], "data": "Z Zhang, M Liu, Z Chen, L Liang, Y Chen, G Ou- arXiv preprint arXiv, 2025\nCode editing plays a vital role in software engineering, requiring developers to adjust \nexisting code according to natural language instructions while keeping functionality \nintact and avoiding unnecessary modifications. However, commit-based datasets", "link": "https://scholar.google.com/scholar_url?url=https://arxiv.org/pdf/2509.25203&hl=vi&sa=X&d=16003307718581653243&ei=ZZj2aIv3NYOAieoPtpDVoA0&scisig=AAZF9b-WX82g5S_NgG548uiHBBUN&oi=scholaralrt&hist=70gU4M0AAAAJ:5337116523931328826:AAZF9b-46FvMQTpOKclK0XMbpLrW&html=&pos=1&folt=rel", "author": ["Thanh Le-Cong"], "ref": ["Thanh Le-Cong - nghi\u00ean c\u1ee9u li\u00ean quan m\u1edbi"]}
{"title": "Leveraging Intra-and Inter-References in vulnerability detection using Multi-Agent collaboration based on LLMs", "first_label": ["Vulnerabilities", "LLM"], "second_label": ["Detection", "Agent"], "data": "CN Tsai, J Xie, CM Lai, CS Lin- Cluster Computing, 2025\nAs AI technology advances, early detection of code vulnerabilities becomes \nincreasingly critical for preventing exploitation, reducing remediation costs, \nenhancing user trust, and improving system performance. Recently, Large language", "link": "https://scholar.google.com/scholar_url?url=https://link.springer.com/article/10.1007/s10586-025-05721-2&hl=vi&sa=X&d=10835680397604577360&ei=ZZj2aIv3NYOAieoPtpDVoA0&scisig=AAZF9b-8m1Pjd5UfUHC6oVBMil6f&oi=scholaralrt&hist=70gU4M0AAAAJ:5337116523931328826:AAZF9b-46FvMQTpOKclK0XMbpLrW&html=&pos=2&folt=rel", "author": ["Thanh Le-Cong"], "ref": ["Thanh Le-Cong - nghi\u00ean c\u1ee9u li\u00ean quan m\u1edbi"]}
{"title": "PVDetector: Pretrained Vulnerability Detection on Vulnerability-enriched Code Semantic Graph", "first_label": ["Vulnerabilities", "Code"], "second_label": ["Detection", "Graph"], "data": "J Li, L Cui, J Zhang, L Li, R Xi, H Zhu- ACM Transactions on Software Engineering, 2025\nAutomated vulnerability detection is a critical issue in software security. The advent of \ndeep learning (DL) has led to numerous studies employing DL to detect \nvulnerabilities in software source code. However, existing approaches still perform", "link": "https://scholar.google.com/scholar_url?url=https://dl.acm.org/doi/pdf/10.1145/3768582&hl=vi&sa=X&d=8582469852291084545&ei=ZZj2aIv3NYOAieoPtpDVoA0&scisig=AAZF9b-KDpNTmZzjJ738P4MlJP3u&oi=scholaralrt&hist=70gU4M0AAAAJ:5337116523931328826:AAZF9b-46FvMQTpOKclK0XMbpLrW&html=&pos=3&folt=rel", "author": ["Thanh Le-Cong"], "ref": ["Thanh Le-Cong - nghi\u00ean c\u1ee9u li\u00ean quan m\u1edbi"]}
{"title": "Vul-R2: A Reasoning LLM for Automated Vulnerability Repair", "first_label": ["Vulnerabilities", "LLM"], "second_label": ["Repair", "Reasoning"], "data": "XC Wen, Z Lin, Y Yang, C Gao, D Ye- arXiv preprint arXiv:2510.05480, 2025\nThe exponential increase in software vulnerabilities has created an urgent need for \nautomatic vulnerability repair (AVR) solutions. Recent research has formulated AVR \nas a sequence generation problem and has leveraged large language models", "link": "https://scholar.google.com/scholar_url?url=https://arxiv.org/pdf/2510.05480&hl=vi&sa=X&d=17087307418542281791&ei=ZZj2aIv3NYOAieoPtpDVoA0&scisig=AAZF9b9CCuNgJaX2E80axtHSP4yC&oi=scholaralrt&hist=70gU4M0AAAAJ:5337116523931328826:AAZF9b-46FvMQTpOKclK0XMbpLrW&html=&pos=4&folt=rel", "author": ["Thanh Le-Cong"], "ref": ["Thanh Le-Cong - nghi\u00ean c\u1ee9u li\u00ean quan m\u1edbi"]}
{"title": "Auto-repair without test cases: How LLMs fix compilation errors in large industrial embedded code", "first_label": ["LLM", "Code", "Software Testing"], "second_label": ["Repair"], "data": "H Fu, S Eldh, K Wiklund, A Ermedahl, P Haller, C Artho- arXiv preprint arXiv, 2025\nThe co-development of hardware and software in industrial embedded systems \nfrequently leads to compilation errors during continuous integration (CI). Automated \nrepair of such failures is promising, but existing techniques rely on test cases, which", "link": "https://scholar.google.com/scholar_url?url=https://arxiv.org/pdf/2510.13575&hl=vi&sa=X&d=1687674771727401275&ei=ZZj2aIv3NYOAieoPtpDVoA0&scisig=AAZF9b-7TRS9QYvOORMoj3Q9nJl9&oi=scholaralrt&hist=70gU4M0AAAAJ:5337116523931328826:AAZF9b-46FvMQTpOKclK0XMbpLrW&html=&pos=5&folt=rel", "author": ["Thanh Le-Cong"], "ref": ["Thanh Le-Cong - nghi\u00ean c\u1ee9u li\u00ean quan m\u1edbi"]}
{"title": "Improving the Efficiency of LLM Agent Systems through Trajectory Reduction", "first_label": ["LLM"], "second_label": ["Agent"], "data": "YA Xiao, P Gao, C Peng, Y Xiong- arXiv preprint arXiv:2509.23586, 2025\nMulti-turn agent systems based on Large Language Models (LLMs) have been \nincreasingly popular for software engineering tasks. While LLM agents show decent \neffectiveness, the high computational cost of input tokens due to the ever-growing", "link": "https://scholar.google.com/scholar_url?url=https://arxiv.org/pdf/2509.23586%3F&hl=vi&sa=X&d=12596444921036280365&ei=ZZj2aIv3NYOAieoPtpDVoA0&scisig=AAZF9b-zx_eKF_ZSiOU7-hQKM67w&oi=scholaralrt&hist=70gU4M0AAAAJ:5337116523931328826:AAZF9b-46FvMQTpOKclK0XMbpLrW&html=&pos=6&folt=rel", "author": ["Thanh Le-Cong"], "ref": ["Thanh Le-Cong - nghi\u00ean c\u1ee9u li\u00ean quan m\u1edbi"]}
{"title": "Real-VulLLM: An LLM Based Assessment Framework in the Wild", "first_label": ["LLM"], "second_label": [], "data": "R Safdar, D Mateen, ST Ali, W Hussain- arXiv preprint arXiv:2510.04056, 2025\nArtificial Intelligence (AI) and more specifically Large Language Models (LLMs) have \ndemonstrated exceptional progress in multiple areas including software engineering, \nhowever, their capability for vulnerability detection in the wild scenario and its", "link": "https://scholar.google.com/scholar_url?url=https://arxiv.org/pdf/2510.04056&hl=vi&sa=X&d=7464868966945655593&ei=ZZj2aIv3NYOAieoPtpDVoA0&scisig=AAZF9b9spMVaIeR2Fu3V7bKIho7O&oi=scholaralrt&hist=70gU4M0AAAAJ:5337116523931328826:AAZF9b-46FvMQTpOKclK0XMbpLrW&html=&pos=7&folt=rel", "author": ["Thanh Le-Cong"], "ref": ["Thanh Le-Cong - nghi\u00ean c\u1ee9u li\u00ean quan m\u1edbi"]}
{"title": "M2CVD: Enhancing Vulnerability Understanding through Multi-Model Collaboration for Code Vulnerability Detection", "first_label": ["Vulnerabilities", "Code"], "second_label": ["Detection"], "data": "Z Wang, G Li, J Li, J Li, M Yan, Y Xiong, Z Jin- ACM Transactions on Software, 2025\nLarge Language Models (LLMs) have strong capabilities in code comprehension, \nbut fine-tuning costs and semantic alignment issues limit their project-specific \noptimization; conversely, fine-tuned models such as CodeBERT are easy to fine", "link": "https://scholar.google.com/scholar_url?url=https://dl.acm.org/doi/pdf/10.1145/3771923&hl=vi&sa=X&d=13259446402958610018&ei=ZZj2aIv3NYOAieoPtpDVoA0&scisig=AAZF9b8ps53CJHIdNi_Igzsg-wO_&oi=scholaralrt&hist=70gU4M0AAAAJ:5337116523931328826:AAZF9b-46FvMQTpOKclK0XMbpLrW&html=&pos=8&folt=rel", "author": ["Thanh Le-Cong"], "ref": ["Thanh Le-Cong - nghi\u00ean c\u1ee9u li\u00ean quan m\u1edbi"]}
{"title": "Enhancing LLM's Ability to Generate More Repository-Aware Unit Tests Through Precise Context Injection", "first_label": ["LLM", "Software Testing"], "second_label": [], "data": "X Yin, C Ni, X Li, L Chen, G Ma, X Yang\nRecently, Large Language Models (LLMs) have gained attention for their ability to \nhandle a broad range of tasks, including unit test generation. Despite their success, \nLLMs may exhibit hallucinations when generating unit tests for focal methods or\n\u00a0\nGoogle Scholar gi thng bo ny cho bn v bn ang theo di nhng bi vit mi lin quan n nghin cu ca \nThanh Le-Cong\n.\nLit k cnh bo\nHy thng bo", "link": "https://scholar.google.com/scholar_url?url=https://vinci-grape.github.io/papers/Enhancing_LLM_s_Ability_to_Generate_More_Repository_Aware_Unit_Tests_Through_Precise_Context_Injection.pdf&hl=vi&sa=X&d=3506872574868649515&ei=ZZj2aIv3NYOAieoPtpDVoA0&scisig=AAZF9b8t-WfSL2eZjQ-5h6SvSin3&oi=scholaralrt&hist=70gU4M0AAAAJ:5337116523931328826:AAZF9b-46FvMQTpOKclK0XMbpLrW&html=&pos=9&folt=rel", "author": ["Thanh Le-Cong"], "ref": ["Thanh Le-Cong - nghi\u00ean c\u1ee9u li\u00ean quan m\u1edbi"]}
