{"title": "Enhancing LLM-based Fault Localization with a Functionality-Aware Retrieval-Augmented Generation Framework", "first_label": ["LLM", "Fault Localization"], "second_label": ["Generation", "Localization"], "data": "X Shi, Z Li, AR Chen- arXiv preprint arXiv:2509.20552, 2025\nFault localization (FL) is a critical but time-consuming task in software debugging, \naiming to identify faulty code elements. While recent advances in large language \nmodels (LLMs) have shown promise for FL, they often struggle with complex systems", "link": "https://scholar.google.com/scholar_url?url=https://arxiv.org/pdf/2509.20552&hl=vi&sa=X&d=538936030362850881&ei=GpLaaLztCcmk6rQPwcXzuAc&scisig=AAZF9b_pS5txVadTljqov2Cyxur_&oi=scholaralrt&hist=70gU4M0AAAAJ:5337116523931328826:AAZF9b-46FvMQTpOKclK0XMbpLrW&html=&pos=0&folt=rel", "author": ["Thanh Le-Cong"], "ref": ["Thanh Le-Cong - nghi\u00ean c\u1ee9u li\u00ean quan m\u1edbi"]}
{"title": "R1-Fuzz: Specializing Language Models for Textual Fuzzing via Reinforcement Learning", "first_label": ["LLM", "Fuzzing"], "second_label": [], "data": "J Lin, L Su, J Li, C Qian- arXiv preprint arXiv:2509.20384, 2025\nFuzzing is effective for vulnerability discovery but struggles with complex targets such \nas compilers, interpreters, and database engines, which accept textual input that \nmust satisfy intricate syntactic and semantic constraints. Although language models\n\u00a0\nGoogle Scholar gi thng bo ny cho bn v bn ang theo di nhng bi vit mi lin quan n nghin cu ca \nThanh Le-Cong\n.\nLit k cnh bo\nHy thng bo", "link": "https://scholar.google.com/scholar_url?url=https://arxiv.org/pdf/2509.20384&hl=vi&sa=X&d=1649136629077213896&ei=GpLaaLztCcmk6rQPwcXzuAc&scisig=AAZF9b9A_fC3MFUyhQ5sK9VXroDy&oi=scholaralrt&hist=70gU4M0AAAAJ:5337116523931328826:AAZF9b-46FvMQTpOKclK0XMbpLrW&html=&pos=1&folt=rel", "author": ["Thanh Le-Cong"], "ref": ["Thanh Le-Cong - nghi\u00ean c\u1ee9u li\u00ean quan m\u1edbi"]}
{"title": "Adversarial Bug Reports as a Security Risk in Language Model-Based Automated Program Repair", "first_label": ["APR", "LLM", "Bug"], "second_label": ["Repair"], "data": "P Przymus, A Happe, J Cito- arXiv preprint arXiv:2509.05372, 2025\nLarge Language Model (LLM)-based Automated Program Repair (APR) systems are \nincreasingly integrated into modern software development workflows, offering \nautomated patches in response to natural language bug reports. However, this", "link": "https://scholar.google.com/scholar_url?url=https://arxiv.org/pdf/2509.05372&hl=vi&sa=X&d=17856431439942945890&ei=eybZaO-TDpCq6rQPzKzJyAY&scisig=AAZF9b9iNtxXJTJlEQXG_3JYQbs1&oi=scholaralrt&hist=70gU4M0AAAAJ:5337116523931328826:AAZF9b-46FvMQTpOKclK0XMbpLrW&html=&pos=0&folt=rel", "author": ["Thanh Le-Cong"], "ref": ["Thanh Le-Cong - nghi\u00ean c\u1ee9u li\u00ean quan m\u1edbi"]}
{"title": "Vdexplainer: Sequential decision-making and probability sampling guided statement-level explanation for vulnerability detection", "first_label": ["Vulnerabilities"], "second_label": ["Detection"], "data": "W Zheng, X Su, Y Jiang, H Wei, W Tao- Computers & Security, 2025\nMost existing deep learning (DL) based vulnerability detection methods, including \npre-trained models, are coarse-grained binary classification methods that lack the \ninterpretability for detection results. Although the explanation of deep learning has", "link": "https://scholar.google.com/scholar_url?url=https://www.sciencedirect.com/science/article/pii/S0167404825003591&hl=vi&sa=X&d=1218753570899613844&ei=eybZaO-TDpCq6rQPzKzJyAY&scisig=AAZF9b-Gvd82yXjuXXps0NDpxzwO&oi=scholaralrt&hist=70gU4M0AAAAJ:5337116523931328826:AAZF9b-46FvMQTpOKclK0XMbpLrW&html=&pos=1&folt=rel", "author": ["Thanh Le-Cong"], "ref": ["Thanh Le-Cong - nghi\u00ean c\u1ee9u li\u00ean quan m\u1edbi"]}
{"title": "From Cryptic to Clear-Training on LLM Explanations to Detect Smart Contract Vulnerabilities", "first_label": ["Vulnerabilities", "Smart Contracts", "LLM"], "second_label": [], "data": "Y Chen, Z Sun, G Wang, Q Liang, X Yu, D Hao- ACM Transactions on Software, 2025\nSmart contracts have revolutionized the way transactions are executed, offering \ndecentralized and immutable frameworks. The immutability of smart contracts poses \nsignificant risks when vulnerabilities exist in their code, leading to financial losses", "link": "https://scholar.google.com/scholar_url?url=https://dl.acm.org/doi/pdf/10.1145/3765753&hl=vi&sa=X&d=10696251976758637118&ei=eybZaO-TDpCq6rQPzKzJyAY&scisig=AAZF9b9ZBf4NQYTpgMU9yATSPdqf&oi=scholaralrt&hist=70gU4M0AAAAJ:5337116523931328826:AAZF9b-46FvMQTpOKclK0XMbpLrW&html=&pos=2&folt=rel", "author": ["Thanh Le-Cong"], "ref": ["Thanh Le-Cong - nghi\u00ean c\u1ee9u li\u00ean quan m\u1edbi"]}
{"title": "The Ground Truth Effect: Investigating SZZ Variants in Just-in-Time Vulnerability Prediction", "first_label": ["Vulnerabilities"], "second_label": [], "data": "A Cannavale, E Iannone, G Di Lillo, F Palomba- Euromicro Conference on, 2025\nAbstract Just-in-Time (JIT) vulnerability prediction is critical for proactively securing \nsoftware, yet its effectiveness heavily relies on the quality of the ground truth used for \ntraining models. This ground truth is commonly established using variants of the SZZ", "link": "https://scholar.google.com/scholar_url?url=https://dl.acm.org/doi/abs/10.1007/978-3-032-04207-1_21&hl=vi&sa=X&d=7079951351329674156&ei=eybZaO-TDpCq6rQPzKzJyAY&scisig=AAZF9b8nsQWVZ7KNLp4p8ZePB-Wu&oi=scholaralrt&hist=70gU4M0AAAAJ:5337116523931328826:AAZF9b-46FvMQTpOKclK0XMbpLrW&html=&pos=3&folt=rel", "author": ["Thanh Le-Cong"], "ref": ["Thanh Le-Cong - nghi\u00ean c\u1ee9u li\u00ean quan m\u1edbi"]}
{"title": "Demystifying the Evolution of Neural Networks with BOM Analysis: Insights from a Large-Scale Study of 55,997 GitHub Repositories", "first_label": [], "second_label": [], "data": "X Ren, Y Ye, X Wu, Y Wu, Y Xue- arXiv preprint arXiv:2509.20010, 2025\nNeural networks have become integral to many fields due to their exceptional \nperformance. The open-source community has witnessed a rapid influx of neural \nnetwork (NN) repositories with fast-paced iterations, making it crucial for practitioners", "link": "https://scholar.google.com/scholar_url?url=https://arxiv.org/pdf/2509.20010&hl=vi&sa=X&d=7068609705453111894&ei=eybZaO-TDpCq6rQPzKzJyAY&scisig=AAZF9b-xjTuce_u6MpnTv1bMQQDb&oi=scholaralrt&hist=70gU4M0AAAAJ:5337116523931328826:AAZF9b-46FvMQTpOKclK0XMbpLrW&html=&pos=4&folt=rel", "author": ["Thanh Le-Cong"], "ref": ["Thanh Le-Cong - nghi\u00ean c\u1ee9u li\u00ean quan m\u1edbi"]}
{"title": "GTVD: a multi-level aggregation vulnerability detection method based on full-dependency program graph", "first_label": ["Vulnerabilities"], "second_label": ["Detection", "Graph"], "data": "H He, S Li, Y Li, Y Li- Cluster Computing, 2025\nIn modern software development life cycles, proactive vulnerability discovery and \nremediation play crucial roles in ensuring application security. However, current \ndeep learning-based vulnerability detection methods frequently face limitations due\n\u00a0\nGoogle Scholar gi thng bo ny cho bn v bn ang theo di nhng bi vit mi lin quan n nghin cu ca \nThanh Le-Cong\n.\nLit k cnh bo\nHy thng bo", "link": "https://scholar.google.com/scholar_url?url=https://link.springer.com/article/10.1007/s10586-025-05506-7&hl=vi&sa=X&d=9365356712912853263&ei=eybZaO-TDpCq6rQPzKzJyAY&scisig=AAZF9b_DdZ4fyL1mLj90wo4wpBRq&oi=scholaralrt&hist=70gU4M0AAAAJ:5337116523931328826:AAZF9b-46FvMQTpOKclK0XMbpLrW&html=&pos=5&folt=rel", "author": ["Thanh Le-Cong"], "ref": ["Thanh Le-Cong - nghi\u00ean c\u1ee9u li\u00ean quan m\u1edbi"]}
{"title": "Investigating Security Implications of Automatically Generated Code on the Software Supply Chain", "first_label": ["Code"], "second_label": [], "data": "X Li, X Gao- arXiv preprint arXiv:2509.20277, 2025\nIn recent years, various software supply chain (SSC) attacks have posed significant \nrisks to the global community. Severe consequences may arise if developers \nintegrate insecure code snippets that are vulnerable to SSC attacks into their \nproducts. Particularly, code generation techniques, such as large language models \n(LLMs), have been widely utilized in the developer community. However, LLMs are \nknown to suffer from inherent issues when generating code, including fabrication\nTrch dn: Thanh Le-Cong, Ratnadira Widyasari, Chakkrit Tantithamthavorn\u00a0\u00a0\n\u00a0\nGoogle Scholar gi thng bo ny cho bn v bn ang theo di nhng li trch dn mi trong cc bi vit ca \nThanh Le-Cong\n.\nLit k cnh bo\nHy thng bo", "link": "https://scholar.google.com/scholar_url?url=https://arxiv.org/pdf/2509.20277&hl=vi&sa=X&d=2296943167312732667&ei=eybZaImgG9q06rQPy6vVkAI&scisig=AAZF9b-8NoLnJec2thOZdzkxyd9r&oi=scholaralrt&hist=70gU4M0AAAAJ:6246953642887790424:AAZF9b-KfaIzNELg_AxYHyYLV6lH&html=&pos=0&folt=cit", "author": ["Thanh Le-Cong"], "ref": ["1 l\u1eddi tr\u00edch d\u1eabn m\u1edbi \u0111\u1ebfn b\u00e0i vi\u1ebft c\u1ee7a Thanh Le-Cong"]}
